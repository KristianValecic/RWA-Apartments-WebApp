@using MVC_Apartmani.Models.ViewModels
@model RegisterViewModel
@{ 
bool createError = (ViewBag.CreateError != null) ? (Boolean)ViewBag.CreateError : false;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>
</head>
<body>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="w-75 p-5 container">
        <h2>Register</h2>
        <hr />
        @using (Html.BeginForm("Register", "Home", null, FormMethod.Post, new { role = "form" }))
        {
            if (createError)
            {
                @Html.Label("User already exists", new { @class = "text-danger", visible = "false" }); 
            }
            <div class="form-group">
                @Html.LabelFor(model => model.Firstname, "Firstname", htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.TextBoxFor(model => model.Firstname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lastname, "Lastname", htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.TextBoxFor(model => model.Lastname, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Register" class="mt-3 btn btn-primary" />
                </div>
            </div>
        }
    </div>
    }

</body>
</html>

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
